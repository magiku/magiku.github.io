<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【交换基础】vlan、接口类型、vlanif</title>
      <link href="/2023/12/11/%E3%80%90%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80%E3%80%91vlan%E3%80%81%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%9E%8B%E3%80%81vlanif/"/>
      <url>/2023/12/11/%E3%80%90%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80%E3%80%91vlan%E3%80%81%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%9E%8B%E3%80%81vlanif/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p> 交换机（二层交换机）：工作在数据链路层（第二层），<strong>根据目标MAC地址来转发数据帧。</strong>它可以通过学习源MAC地址和物理接口之间的映射关系，建立转发表，从而实现数据帧的快速转发。 </p><p> 这一部分的内容已经在上期的科普篇里有所介绍了，这边不再进行说明讲解。 </p><p> 随着技术的发展，交换机也拓展出了基于网络层（第三层）的功能。为了区分，通常会称为三层交换机。 </p><p> <strong>三层交换机有了网络层的功能</strong>，就可以<strong>作为网关实现跨网段的转发通信行</strong>，甚至分配动态ip。 </p><blockquote><p>另外，交换机还有傻瓜交换机与可网管交换机之分： </p><p>傻瓜交换机 —— 特指无法进行配置，插上即可使用。 </p><p>网管交换机 —— 也称企业级交换机，特指可以进行命令配置的交换机。 </p><p>注：<strong>网管交换机并不都是三层交换机，二层交换机一样也有网管级的。</strong></p></blockquote><p> 本篇主要是围绕着vlan（虚拟局域网）进行讲解介绍。 先从vlan技术（二层交换机）开始讲解一步步拓展到vlanif技术（三层交换机）。<br> 内容的介绍会涉及到命令的配置，使用的是华为的ensp模拟器来进行模拟配置。</p><h1 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h1><h2 id="什么是VLAN"><a href="#什么是VLAN" class="headerlink" title="什么是VLAN"></a>什么是VLAN</h2><p> <strong>VLAN（Virtual Local Area Network）即虚拟局域网</strong>，是一种逻辑上的网络分割技术，<strong>用于将物理上的局域网（LAN）划分成多个虚拟的子网（多个广播域）</strong>。  </p><p>通过使用VLAN，可以将不同的设备或用户组织到不同的逻辑网络中，即使它们物理上连接的是同一个交换机上。（不同交换机也可组织到同一个VLAN）</p><p> <strong>每个VLAN是一个广播域，VLAN内的主机间可以直接通信，而VLAN间则不能直接互通</strong>。(一方面是隔离广播域后无法使用ARP查找设备mac地址，另一方面是协议规定了设备遇到不同VLAN的数据帧就丢弃)</p><p>此外，VLAN还可以简化网络管理，因为管理员可以根据需要对每个VLAN进行配置和管理，而无需干扰其他VLAN。</p><p>VLAN是基于交换机的，交换机通过将数据帧打上VLAN标签来识别不同的VLAN。这些标签可以基于端口、MAC地址或其他标识符进行配置。  </p><p>当数据帧在交换机之间传输时，<strong>交换机会根据VLAN标签将数据帧转发到正确的VLAN中的目标设备</strong>。</p><p>总之，VLAN是一种用于划分局域网的技术，可以提供更好的网络管理、性能和安全性。  </p><h2 id="为什么需要VLAN"><a href="#为什么需要VLAN" class="headerlink" title="为什么需要VLAN"></a>为什么需要VLAN</h2><p>在二层网络中，一台主机发送一个广播数据帧，网络中所有主机都会收到，网络中的每一条链路都至少传输了一次广播包。我们把这样的转发接收广播数据帧的区域叫做广播域。  </p><p><strong>广播域范围过大，其中的广播数据会存在过多，占用太多带宽（网络资源），影响网络性能。</strong>  </p><p>在此之前，我们采用的方案是划分网段，使网络设备分处于不同的局域网（LAN），再由<strong>路由器</strong>来隔离广播域。广播包就被限定在每一个局域网内，不会影响到处于其他局域网的设备。  </p><p>而VLAN，即虚拟局域网，这种技术不需要修改设备的ip地址与网段，直接在<strong>二层网络</strong>中不涉及网络层的情况下就能虚拟出局域网，完成广播域的隔离。  </p><p>还有一个更主要的原因是原先使用网段划分，需要使用大量的路由器。<strong>如果依旧采用单台路由器配合多台交换机的方案，那还是无法隔离</strong>。</p><p>这是因为交换机只解封装到二层，发现数据帧报头的广播地址，便会从交换机的所有接口转发出去，不会去区分网段是否一致。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/0ce8198d35b4c07a68ecd.png" alt="图1——前言拓扑"></p><blockquote><p>例如以上拓扑图，PC1是10网段，PC2也是10网段，但PC3是30网段。</p><p>PC1要与PC2通信，因为没有PC2的mac地址，于是发送了ARP广播来询问PC2的mac地址。</p><p>我们可能会觉得只是去查PC2的10.0.0.2这个ip对应的mac地址是多少，那么不会找到处于30网段的PC3去。</p><p>但只要去抓包，就能知道交换机2会将ARP包也转发给PC3跟路由器。</p></blockquote><p>引入vlan这种二层技术，只需要交换机就可以完成广播域的隔离了。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/4b323cb19471ec3628159.png" alt="图2——vlan作用"></p><h2 id="VLAN技术带来的问题"><a href="#VLAN技术带来的问题" class="headerlink" title="VLAN技术带来的问题"></a>VLAN技术带来的问题</h2><p>VLAN技术，可以在数据链路层的层面进行隔绝广播域，这非常好的解决了广播泛滥带来的性能显著下降甚至造成网络不可用等问题。但也正因为隔绝了广播域，它带来了新的问题。  </p><p>广播包无法发送到其他vlan下的设备，意味着ARP包也无法跨vlan传播，这就导致<strong>无法获取其他vlan下设备的mac地址</strong>，进而导致不同vlan之间无法进行通信。**[ 但实际上即便知道了mac地址并手动绑定进ARP表中，也无法跨vlan通信；交换机不仅隔绝了广播包，不同vlan之间的单播包也会被拦截。]**</p><p>不过，也有很多人将这一问题视为vlan的优点，认为这<strong>增加了网络的安全性</strong>。  </p><p>想要解决这个问题，一个是逻辑上使vlan失效（后面就会介绍的标签管理）；</p><p>另一个方法就是通过三层设备的路由功能来实现，也就是使用网关，并为每一个vlan划定好网段；网关可以使用路由器，也可以使用三层交换机（开启vlanif）。</p><p>这一部分内容稍后会详细介绍，接下来我们讲一讲VLAN的原理与配置。  </p><h2 id="VLAN的原理"><a href="#VLAN的原理" class="headerlink" title="VLAN的原理"></a>VLAN的原理</h2><p>IEEE于1999年颁布了用于标准化VLAN实现方案的802.1Q协议标准草案，该标准定义了VLAN的数据帧结构。  </p><p>在传统的以太网数据帧基础上（源MAC地址字段和协议类型字段之间）增加4个字节的802.1Q Tag。</p><blockquote><p><strong>TPID</strong>（Tag Protocol Identifier）：TPID是VLAN标签的第一个字段，占据2个字节。它<strong>用于标识VLAN标签的存在</strong>，并指示后续字段的解释方式。对于以太网中的VLAN标签，TPID的值通常为0x8100。</p><p>PRI（Priority Code Point）：PRI字段是VLAN标签的第二个字段，占据3个比特位。PRI字段用于指示数据帧的优先级，用于实现QoS（Quality of Service，服务质量）功能。PRI字段的值范围从0到7，值越大优先级越高。当网络阻塞时，交换机优先发送优先级高的数据帧。</p><p>CFI（Canonical Format Identifier）：CFI字段是VLAN标签的第三个字段，占据1个比特位。CFI字段用于指示MAC地址是否采用规范格式。当CFI字段的值为0时，表示MAC地址采用规范格式；当CFI字段的值为1时，表示MAC地址采用非规范格式。</p><p><strong>VID</strong>（VLAN Identifier）：VID字段是VLAN标签的最后一个字段，占据12个比特位。<strong>VID字段用于标识数据帧所属的VLAN</strong>。每个VLAN都有一个唯一的VLAN ID，可以支持最多4096个不同的VLAN。<strong>通过VID字段，交换机可以根据VLAN ID来识别并转发数据帧到相应的VLAN</strong>。(<strong>协议规定了VLAN0与VLAN4095作为保留，因此真正可使用的为4094个</strong>)</p></blockquote><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/6f0a5b5eb68ea089a9db4.png" alt="图3——vlan标签"></p><p>请记住一点：<strong>VLAN是在交换设备上的技术，网络终端（PC）是不会发送与接收带有VLAN的数据帧。</strong></p><p>人为的在交换机上配置VLAN的划分规则后，PC发送过来的数据帧在经过交换机时，就会被交换机添加上VLAN标签。</p><p>交换机根据vlan标签来确定数据帧的发送范围，而当下一跳就为目的终端时，交换机会先将vlan标签剥离再发送。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/ccfa1235bb485bb68b304.png" alt="图4——vlan标签的作用"></p><p><strong>打标签与剥离标签是vlan技术的重点内容。</strong>为了更好更方便的管理vlan标签，就引入了接口类型的概念。</p><p>实际上vlan的实现方式有好几种，但<strong>目前广泛采用的都是基于接口的方式</strong>。</p><p>简单说一下其他方式吧：【以下方式不被广泛采用都是因为配置繁琐、后期维护与拓展不易或有较大的漏洞（比如mac地址可被人为修改）】</p><blockquote><p><em>基于MAC地址划分：根据数据帧的源MAC地址来划分VLAN。</em></p><blockquote><p>网络管理员预先配置MAC地址和VLAN ID映射关系表，当交换机收到的是传统数据帧时，就依据该表给数据帧添加指定VLAN的标签，然后数据帧将在指定VLAN中传输。</p></blockquote><p><em>基于IP子网划分：根据数据帧中的源IP地址和子网掩码来划分VLAN。</em></p><blockquote><p>网络管理员预先配置IP地址和VLAN ID映射关系表，当交换机收到的是传统数据帧，就依据该表给数据帧添加指定VLAN的标签，然后数据帧将在指定VLAN中传输。</p></blockquote><p><em>基于协议划分：根据数据帧所属的协议（族）类型及封装格式来划分VLAN。</em></p><blockquote><p>网络管理员预先配置以太网帧中的协议域和VLAN ID的映射关系表，如果收到的是传统数据帧，就依据该表给数据帧添加指定VLAN的标签，然后数据帧将在指定VLAN中传输。</p></blockquote><p><em>基于策略划分：根据配置的策略划分VLAN，能实现多种组合的划分方式，包括接口、MAC地址、IP地址等。</em></p><blockquote><p>网络管理员预先配置策略，如果收到的是传统数据帧，且匹配配置的策略时，给数据帧添加指定VLAN的标签，然后数据帧将在指定VLAN中传输。</p></blockquote></blockquote><hr><p>在一个VLAN交换网络中，以太网数据帧主要有以下两种形式：</p><ul><li><strong>无标签帧（Untagged帧）</strong>：原始的、未加入4字节VLAN标签的传统数据帧。</li><li><strong>有标签帧（Tagged帧）</strong>：加入了4字节VLAN标签的帧。</li></ul><h2 id="VLAN的接口类型和VLAN标签的处理机制"><a href="#VLAN的接口类型和VLAN标签的处理机制" class="headerlink" title="VLAN的接口类型和VLAN标签的处理机制"></a>VLAN的接口类型和VLAN标签的处理机制</h2><p>交换机内部处理的数据帧一律都带有VLAN标签，而现网中交换机连接的设备有些只会收发传统数据帧，要与这些设备交互，就需要接口能够识别传统数据帧并在收发时给帧添加&#x2F;剥除VLAN标签。</p><p>同时，现网中属于同一个VLAN的用户可能会被连接在不同的交换机上，且跨越交换机的VLAN可能不止一个。</p><p><strong>如果需要用户间的互通，就需要交换机与交换机之间的接口能够同时识别和发送多个VLAN的数据帧。</strong></p><p>根据接口连接对象以及对收发数据帧处理的不同，当前有VLAN的多种接口类型，以适应不同的连接和组网。</p><p>不同厂商对VLAN接口类型的定义可能不同。<strong>常见的VLAN接口类型有两种：Access和Trunk。</strong></p><p>对于华为设备来说，还有第三种接口类型：Hybrid（一般不使用Hybrid）</p><p><strong>接口类型是在交换机上配置的</strong>，不同接口类型有不同的机制，接下来就学习一下这三种接口类型。</p><h2 id="默认VLAN-缺省VLAN"><a href="#默认VLAN-缺省VLAN" class="headerlink" title="默认VLAN&#x2F;缺省VLAN"></a>默认VLAN&#x2F;缺省VLAN</h2><p>在计算机术语中，<strong>“缺省”二字表示默认的意思</strong>。因为它听起来总是不那么适应，所以本文都会称为默认。</p><p><strong>默认VLAN代指PVID</strong>（Port Default VLAN ID）。</p><p>前面提到，<strong>交换机处理的数据帧都带Tag</strong>，当交换机收到Untagged帧（不带标签的传统数据帧）时，就需要给该帧添加Tag，添加什么Tag，就由接口上的默认VLAN决定。它的具体作用是：</p><ul><li>当接口接收数据帧时：如果接口收到一个Untagged帧，交换机会根据PVID给此数据帧添加等于PVID的Tag，然后再交给交换机内部处理；如果接口收到一个Tagged帧，交换机则不会再给该帧添加接口上PVID对应的Tag。</li><li>当接口发送数据帧时：如果发现此数据帧的Tag的VID值与PVID相同，则交换机会将Tag去掉，然后再从此接口发送出去。</li></ul><p><strong>每个接口都有一个默认VLAN。默认情况下，所有接口的默认VLAN均为VLAN1</strong>，但用户可以根据需要进行配置：</p><ul><li>对于Access接口，默认VLAN就是它允许通过的VLAN，修改接口允许通过的VLAN即可更改接口的默认VLAN。</li><li>对于Trunk接口和Hybrid接口，其接口可以允许多个VLAN通过，修改接口允许通过的VLAN不会更改接口的默认VLAN，修改默认VLAN需要使用专门的命令。</li></ul><h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><p><strong>对一台交换机来说，接口都是独立</strong>，不止是交换机外部表现为独立，在交换机内部也是独立的。</p><p>后面介绍接口类型时，请一定不要将交换机当作一个整体。</p><p><strong>交换机的配置都是基于接口的</strong>，每一个接口都可以进行独立的配置。</p><p>所以一个数据帧进入交换机的接口时就开始进行处理，<strong>当处理完的数据帧，在交换机内部被移交到另一个接口时，会根据那一个接口的配置再进行一次处理</strong>。</p><p>理解了这一点之后，后面对接口类型的学习就会很清晰了。</p><h2 id="Access接口"><a href="#Access接口" class="headerlink" title="Access接口"></a>Access接口</h2><p><strong>Access接口一般用于和不能识别Tag的用户终端（如PC、服务器）相连，或者不需要区分不同VLAN成员时使用。</strong></p><p><strong>Access接口大部分情况只能收发Untagged帧</strong>。</p><p><strong>交换机内部只处理Tagged帧</strong>，所以Access接口需要给收到的数据帧添加VLAN标签，也就必须配置一个默认的VLAN。</p><p><strong>配置默认VLAN后，该Access接口也就加入了该VLAN，收到不带标签的数据帧就会打上该默认VLAN的标签。</strong></p><p><strong>如果Access接口收到带有Tag的帧，并且帧中VID与PVID（默认vlan）相同时，Access接口就接收并处理该帧。</strong></p><blockquote><p>当<strong>数据帧</strong>中的vlan标签内部的<strong>VID</strong>（vlan id）等于<strong>接口</strong>的<strong>PVID</strong>，那就说明这是萝卜回萝卜坑了。</p><p>都是同属于一个vlan，自然就可以正常接收该数据帧</p><p>如果ID不同，即不是同一vlan的数据帧，就会丢弃。</p></blockquote><p><strong>此外，当交换设备在发送带有Tag的帧前，Access接口会剥离Tag。</strong></p><blockquote><p>因为access接口在设定上是与无法识别带vlan标签的终端连接的。</p><p>因此，当一个带标签数据帧的目标链路是access接口所在的链路，那么交换机在发送数据帧时会将标签剔除。</p></blockquote><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/8e4311234a6ed980c5d3f.png" alt="图5——access接口标签处理"></p><h2 id="Trunk接口"><a href="#Trunk接口" class="headerlink" title="Trunk接口"></a>Trunk接口</h2><p><strong>Trunk接口一般用于连接交换机</strong>、路由器、AP。</p><p>它可以<strong>允许多个VLAN的帧带Tag通过</strong>，但只允许<strong>属于默认VLAN的帧从该类接口上发出时不带Tag</strong>（即剥离标签）。</p><blockquote><p>说白了，就是与access接口互补，access接口是用于连接不能识别标签的终端；trunk接口就是用于可以识别标签的设备。</p><p>因此trunk接口可以收发多个vlan的数据帧，只需要配置了允许哪些vlan标签的数据帧通过即可。</p><p>至于剥离标签的机制，大部分不剥离，只有跟PVID一致的vlan标签才剥离。</p></blockquote><p>Trunk接口上的默认VLAN，有的厂商也将它定义为native VLAN。</p><p>当Trunk接口收到Untagged帧时，会为Untagged帧打上Native VLAN对应的Tag。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/331010dae222f3b35a3ff.png" alt="图6——trunk接口标签处理"></p><h2 id="Hybrid接口"><a href="#Hybrid接口" class="headerlink" title="Hybrid接口"></a>Hybrid接口</h2><p>Hybrid接口既可以用于连接不能识别Tag的用户终端（如用户主机、服务器）和网络设备（如Hub），也可以用于连接交换机、路由器、AP。</p><p>它<strong>可以允许多个VLAN的帧带Tag通过，且允许从该类接口发出的帧根据需要配置某些VLAN的帧带Tag（即不剥除Tag）、某些VLAN的帧不带Tag（即剥除Tag）。</strong></p><blockquote><p>意思就是通用性接口，可以随意配置，与任何设备连接都能使用Hybrid接口。</p><p>接收原理与trunk一样，而发送时，可以根据预先配置来判断是否剥离vlan标签。</p></blockquote><p>Hybrid接口和Trunk接口在很多应用场景下可以通用，<strong>但在某些应用场景下，必须使用Hybrid接口。</strong></p><p>比如在灵活<a href="https://info.support.huawei.com/info-finder/encyclopedia/zh/QinQ.html">QinQ</a>中，服务提供商网络的<strong>多个</strong>VLAN的报文在进入用户网络前，需要剥离外层VLAN Tag。</p><p>此时Trunk接口不能实现该功能，因为Trunk接口只能使该接口默认VLAN的报文不带VLAN Tag通过。</p><blockquote><p>Hybrid接口可以自由的使用命令来让交换机对什么vlan标签直接转发，对什么vlan标签进行剥离，有很大的操作空间。</p><p>但一般来说不会去使用它，只有当access与trunk都无法满足需求，且设备与链路还有vlan必须这样配置时，才会采用Hybrid接口。</p><p>这是因为现网中，很少全部采用同一品牌的设备，而Hybrid接口目前是华为设备使用的技术。更进一步的说，就是Hybrid接口还未被广大的基层网络工程师学习接受。</p></blockquote><h2 id="接口类型的命令配置"><a href="#接口类型的命令配置" class="headerlink" title="接口类型的命令配置"></a>接口类型的命令配置</h2><p>以上是三种接口类型的原理描述。接下来介绍一下配置命令，后面就使用命令来完成一个简易的拓扑配置。</p><p><strong>加粗</strong>的为固定的命令语法，<em>斜体</em>是自行修改的变量，具体用法可以参照后面的拓扑配置。</p><h3 id="创建vlan"><a href="#创建vlan" class="headerlink" title="创建vlan"></a>创建vlan</h3><p>首先需要在交换机内部创建好vlan，<strong>注意每一台交换机都需要配置vlan</strong>。</p><ol><li>执行命令<strong>system-view</strong>，进入系统视图。</li><li>执行命令<strong>vlan</strong> <em>vlan-id</em>，创建VLAN并进入VLAN视图。如果VLAN已经创建，则直接进入VLAN视图。<ul><li>如果需要批量创建，执行命令<strong>vlan bath</strong> <em>vlan-id1</em> <em>vlan-id2</em> ，命令后可创建多个vlan。每个vlan-id之间用空格隔开。</li><li>如果批量创建的vlan是递增的，可执行命令<strong>vlan batch</strong> <em>vlan-id1</em> to <em>vlan-idn</em>  ，比如创建2到10，就<strong>vlan bath</strong> <em>2</em> to <em>1</em>0</li></ul></li><li>执行命令<strong>quit</strong>，返回系统视图。</li></ol><h3 id="配置access接口"><a href="#配置access接口" class="headerlink" title="配置access接口"></a>配置access接口</h3><ol><li>执行命令<strong>interface</strong> <em>interface-type</em> <em>interface-number</em>，进入需要加入VLAN的以太网接口视图。</li><li>执行命令<strong>port link-type</strong> <strong>access</strong>，配置接口类型为access。</li><li>执行命令<strong>port default vlan</strong> <em>vlan-id</em>，配置接口的默认VLAN并将接口加入到指定VLAN。</li><li>（可选）执行命令<strong>port discard tagged-packet</strong>，配置接口丢弃入方向带VLAN 标签的数据帧，即不接收带标签的数据帧。</li></ol><blockquote><p>如果要批量的配置access接口，可以在vlan视图下直接添加接口。</p><ol><li>执行命令<strong>vlan</strong> <em>vlan-id</em>，进入VLAN视图。</li><li>执行命令<strong>port</strong> <em>interface-type</em> <em>interface-number</em> ，添加接口到vlan（以access的类型）</li></ol><p>该命令指定的接口数量也可以使用批量方式，接口号之间空格隔开或是使用“to”指定范围。</p></blockquote><h3 id="配置trunk接口"><a href="#配置trunk接口" class="headerlink" title="配置trunk接口"></a>配置trunk接口</h3><ol><li>执行命令<strong>interface</strong> <em>interface-type</em> <em>interface-number</em>，进入需要加入VLAN的以太网接口视图。</li><li>执行命令<strong>port link-type</strong> <strong>trunk</strong>，配置接口类型为trunk。</li><li>执行命令<strong>port trunk allow-pass vlan</strong> <em>vlan-id</em>，配置放行通过的vlan。<ul><li>批量添加也是可以多个vlan-id之间用空格隔开，或者使用“to”指代连续递增的vlan-id。</li><li>另外可以使用port trunk allow-pass vlan all，表示放行所有vlan。</li></ul></li><li>（可选）执行命令<strong>port trunk pvid vlan</strong> <em>vlan-id</em>，配置Trunk接口的默认VLAN。<ul><li>需要剥离标签的情景下使用，发送数据帧是会剥离与该pvid相同的vlan标签。</li></ul></li></ol><h3 id="配置hybrid接口"><a href="#配置hybrid接口" class="headerlink" title="配置hybrid接口"></a>配置hybrid接口</h3><ol><li><p>执行命令<strong>port link-type</strong> <strong>hybrid</strong>，配置接口类型为hybrid。</p></li><li><p>根据实际需要选择任一方式将接口加入VLAN（批量添加的方式与trunk接口一样）：</p><p>执行命令<strong>port hybrid untagged vlan</strong> <em>vlan-id</em> ，配置指定vlan不带标签。</p><p>执行命令<strong>port hybrid tagged vlan</strong> <em>vlan-id</em>，配置指定vlan携带标签。</p></li><li><p>（可选）执行命令<strong>port hybrid pvid vlan</strong> <em>vlan-id</em>，配置Hybrid接口的默认VLAN。</p></li></ol><h3 id="批量添加方式"><a href="#批量添加方式" class="headerlink" title="批量添加方式"></a>批量添加方式</h3><p>接口类型的配置是基于接口的，一般的网管交换机都是24口，一个一个配置很费事。</p><p>可以使用接口组，同时对多个接口进行<strong>相同</strong>的配置。配置不同的话，就还是得一个一个配。</p><p>使用<strong>port-group</strong> <em>group-name</em> 命令创建接口组，指定接口。再按一般的接口类型配置命令进行配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] port-group pg1</span><br><span class="line">[HUAWEI-port-group-pg1] group-member gigabitethernet0/0/1 to gigabitethernet0/0/5</span><br><span class="line">[HUAWEI-port-group-pg1] port link-type access</span><br><span class="line">[HUAWEI-port-group-pg1] port default vlan 10</span><br></pre></td></tr></table></figure><h2 id="跨vlan通信"><a href="#跨vlan通信" class="headerlink" title="跨vlan通信"></a>跨vlan通信</h2><p>前面提到过，不同vlan之间无法互相通信，想要跨vlan通信有两种方法，一是使vlan”失效“，二是借助网关。</p><p>接下来就分开介绍这两种方法。</p><h3 id="使用接口类型的配置"><a href="#使用接口类型的配置" class="headerlink" title="使用接口类型的配置"></a>使用接口类型的配置</h3><p>vlan间的通信隔离实际就是通过vlan标签完成的，那么只要让<strong>跨vlan时传递的数据帧不携带vlan标签，就可以实现跨vlan通信。</strong></p><p>需要利用有三点：</p><ul><li>access接口发送的数据帧不携带标签。</li><li>接口要发送的数据帧携带的vlan标签id与该接口的默认vlan的id相同时就会剥离标签。</li><li>采用hybrid接口来剥离与目标终端相连接口的数据帧标签。</li></ul><h4 id="基于access与trunk的配置"><a href="#基于access与trunk的配置" class="headerlink" title="基于access与trunk的配置"></a>基于access与trunk的配置</h4><p>基于前两点就可以实现跨vlan通信了，以下就举一个拓扑案例。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/3ef9129ec58b6f4196c7f.png" alt="图7——跨vlan通信拓扑1"></p><p>三台交换机串联在一起，每台交换机底下有一台PC，其中交换机1与3下的PC划分为vlan10；交换机2下的PC划分为vlan20。</p><p>PC无法识别带标签的数据帧，那么交换机与PC之间的接口就必须采用access接口。同时已经划分好了vlan，所以该接口的配置命令就完全确定下来了。</p><blockquote><p>三个交换机都使用以下的配置，只是在交换机2将vlan-id改为20；注意括号之后的加粗字符才是真正键入的命令。</p></blockquote><blockquote><p><magiku><strong>system-view</strong><br>[magiku]<strong>vlan 10</strong><br>[magiku-vlan10]<strong>q</strong><br>[magiku]<strong>interface g 0&#x2F;0&#x2F;1</strong><br>[magiku-GigabitEthernet0&#x2F;0&#x2F;1]<strong>port link-type access</strong><br>[magiku-GigabitEthernet0&#x2F;0&#x2F;1]<strong>port default vlan 10</strong></p></blockquote><p>因为涉及了多个vlan，所以交换机之间无法配置为access接口（access接口只能通行一个vlan），必须采用trunk接口。</p><p>同时该接口需要放行vlan10与20，剩下的就是默认vlan（pvid）的确定了。</p><p>现在让我们以交换机1为焦点，只有当标签为vlan10的数据帧才能转发给PC1，那么交换机1的trunk接口所接收到的数据帧就必须为vlan10。</p><p>这有两种方式：（可以往回翻，再重新看一下trunk接口处理标签的机制）</p><ul><li>一是交换机2发来的数据帧不带标签且交换机1的trunk接口默认vlan为10。</li><li>二是交换机2发来的数据帧携带vlan10的标签</li></ul><blockquote><p>不过方式二其实无法做到，因为想发出vlan10的标签。</p><p>在该拓扑之下，只能是交换机2在1号口收到的数据帧，处理为vlan10的标签。</p><p>这就要将1号口改为vlan10，而这就不满足PC2设置为vlan20的要求了。</p></blockquote><p>交换机2收到PC发过来的数据帧会打上vlan20的标签，想要在发送时剥离标签的话，就要将左侧的2号口默认vlan设置为20。</p><p>当不带标签的数据帧从交换机2到达交换机1，由于交换机1的2号口初始默认vlan为vlan1，所以会打上vlan1的标签，这就无法发送给PC1。</p><p>因此还要修改交换机1的2号口默认vlan为vlan10。</p><p>这正好也满足了PC1发送数据帧到达PC2的要求。</p><p>好的，按照以上两点去配置交换机1与交换机2后，PC1与PC2就可以互相通信了。</p><p>再按这个思路去配置交换机2与交换机3之间的接口，那么三台PC之间就能互相通信了。</p><p>其中，PC1与PC3虽然同属vlan10，但数据帧在接触到交换机2的接口时，会被打上20的标签，发出时根据默认vlan的配置，会剥离20标签。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/77a9d3c048764f31d0ba2.png" alt="图8——标签过程.png"></p><p>在交换机之间抓包的话，都是无标签。标签的变动都是在交换机内部进行的，进入交换机时打上标签，离开交换机时剥离标签。</p><p>交换机1与交换机3的配置一样：</p><blockquote><p>vlan batch 10 20</p><p>interface GigabitEthernet0&#x2F;0&#x2F;1<br> port link-type access<br> port default vlan 10</p><p>interface GigabitEthernet0&#x2F;0&#x2F;2<br> port link-type trunk<br> port trunk pvid vlan 10<br> port trunk allow-pass vlan 10 20</p></blockquote><p>交换机2的配置：</p><blockquote><p>vlan batch 10 20</p><p>interface GigabitEthernet0&#x2F;0&#x2F;1<br> port link-type access<br> port default vlan 20</p><p>interface GigabitEthernet0&#x2F;0&#x2F;2<br> port link-type trunk<br> port trunk pvid vlan 20<br> port trunk allow-pass vlan 10 20</p><p>interface GigabitEthernet0&#x2F;0&#x2F;3<br> port link-type trunk<br> port trunk pvid vlan 20<br> port trunk allow-pass vlan 10 20</p></blockquote><h5 id="小问题"><a href="#小问题" class="headerlink" title="小问题"></a>小问题</h5><p>基于access与trunk的配置来实现跨vlan通信有一个缺点。</p><p>那就是trunk接口只能配置一个默认vlan，所以<strong>只能剥离一个vlan标签</strong>。</p><p>同时，<strong>如果在上一个交换机剥离了标签，那么到本交换机会被打上默认vlan标签。</strong></p><p>具体点，我们把上面的拓扑修改以下，删除交换机3，将PC3连入交换机2。</p><p>因此，需要将3号口修改为access接口，配置为vlan10。</p><p>修改后，PC1与PC2依旧可以互相通信，但PC1与PC3就无法通信了（明明是同一个vlan）。</p><p>因为PC1发送的数据帧在交换机1剥离了标签，在交换机2的2号口打上了20的标签，因为vlan不同，所以交换机不会将数据帧从3号口发送出去。</p><p>同样的，PC2与PC3也因为vlan不同，在同交换机下，无法互相通信。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/c20393b35d48c02da12b5.png" alt="图9——拓扑修改"></p><h4 id="引入hybrid接口的配置"><a href="#引入hybrid接口的配置" class="headerlink" title="引入hybrid接口的配置"></a>引入hybrid接口的配置</h4><p>上面这种拓扑要求已经无法使用access接口与trunk接口来完成跨vlan通信了。</p><p>引入hybrid接口的话，以交换机2为焦点。</p><p>想让PC2与PC3通信，同时保持他们处于vlan20与vlan10。</p><p>那么只能是修改接口为hybrid，同时配置为剥离vlan10与20的标签，再分别配置其默认vlan。</p><blockquote><p>更换接口类型的话，需要删除之前的配置命令，在之前配置的命令前打上<strong>undo</strong>用空格隔开，如果报错了，就去掉命令后面的自定义变量参数。</p></blockquote><p>交换机2修改后的1号口与3号口配置</p><blockquote><p>interface GigabitEthernet0&#x2F;0&#x2F;1<br> port hybrid pvid vlan 20<br> port hybrid untagged vlan 10 20</p><p>interface GigabitEthernet0&#x2F;0&#x2F;3<br> port hybrid pvid vlan 10<br> port hybrid untagged vlan 10 20</p></blockquote><p>修改这两个接口的配置后，这三台PC就又可以互相通信了。</p><p>当然，也可以把其他的接口都修改为hybrid接口，有兴趣的话，建议自己尝试一下。</p><h3 id="使用网关的方式"><a href="#使用网关的方式" class="headerlink" title="使用网关的方式"></a>使用网关的方式</h3><p>一般来说，在企业中会基于部门、职能或办公区划分子网，再同时划分vlan来隔绝广播域。（很多管理设备与方案都是基于ip地址的）</p><p>在这种情形下，<strong>不同网段的设备之间就可以借助网关实现跨vlan通信。</strong></p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/2eb9af0aa1f4255227fc4.png" alt="图10——路由跨vlan"></p><p>这是本文一开始的拓扑图，在路由器的接口配置好IP地址，PC上的网关填写为路由器的ip地址。</p><p>再给交换机与路由器相连的接口配置好默认vlan，以保证发送无标签数据帧给路由器。</p><p>这样PC1与PC3就可以互相通信了（三层通信）。</p><p>不过这种方案不成熟，每一个vlan都需要占用一个路由器的物理接口。成熟的采用路由器的方案是单臂路由。</p><h4 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h4><p>所谓的单臂路由就是只使用单条链路连接下行设备的路由器方案。</p><p>单臂路由是通过在物理接口上虚拟出多个逻辑子接口，再配置不同的命令在这些虚拟接口上。</p><p>配置方式：</p><ol><li>执行命令<strong>interface</strong> <em>interface-type</em> <em>interface-number</em>.virtual-number ，创建并进入虚拟子接口视图</li><li>执行命令<strong>dot1q termination vid</strong> <em>vlan-id</em> ，将子接口与vlan进行关联，以处理该vlan的数据帧</li><li>执行命令<strong>ip address</strong> <em>IP地址 子网掩码</em>  ，为该子接口配置ip地址，作为该vlan的网关</li><li>执行命令<strong>arp broadcast enable</strong> ，使接口可以收发ARP广播包（旧型号的华为设备默认不开启该功能，不开启的话无法通信）</li></ol><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/eeeddfa296bcdf6e6e74f.png" alt="图11——单臂路由"></p><p>之前的拓扑图就可以修改为这样。AR1路由器上虚拟出了两个接口，配置了两个不同的ip地址作为10网段与30网段的网关地址。</p><p>交换机2这边按正常的trunk方式配置，方向vlan10与vlan30的数据帧。</p><blockquote><p>interface GigabitEthernet0&#x2F;0&#x2F;4<br> port link-type trunk<br> port trunk allow-pass vlan 10 30</p></blockquote><p>路由器的配置：</p><blockquote><p>interface GigabitEthernet0&#x2F;0&#x2F;1.10<br> dot1q termination vid 10<br> ip address 10.0.0.254 255.0.0.0<br> arp broadcast enable</p><p>interface GigabitEthernet0&#x2F;0&#x2F;1.30<br> dot1q termination vid 30<br> ip address 30.0.0.254 255.0.0.0<br> arp broadcast enable</p></blockquote><p><strong>注：虚拟子接口的编号强烈建议设置为与vlan-id相同的</strong>，子接口可设置的编号范围与vlan-id的可设置范围都是一样的1-4095。</p><p>经过以上配置后，三台PC之间就可以互相通信了。（PC记得填写好子网掩码与网关地址）</p><p>同时，在路由器处抓包的话，可以看到数据帧的标签是来回切换的。</p><p>发过来的为10标签，经由路由器转发出去时就为30；反过来，收到30，发出去就为10。</p><h4 id="三层交换机与vlanif技术"><a href="#三层交换机与vlanif技术" class="headerlink" title="三层交换机与vlanif技术"></a>三层交换机与vlanif技术</h4><p>还记得我们一开始划分广播域的初衷吗——广播数据会存在过多，占用太多带宽（网络资源），影响网络性能。</p><p>使用单臂路由结合vlan技术，是完美做到了削减广播数据。</p><p>但是，进行跨vlan通信时，都需要跑到路由器上，并且还是单条链路进行收与发（一次双向通信，对上层链路的带宽占用是双倍的）。</p><p>以我们科普篇的一张企业拓扑图举例，明明只是与隔壁交换机下的一台主机互相通信，却要绕一大圈，这不仅降低效率，也占用了太多额外网络资源。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/806480ad0d572120876ea.png" alt="图12——单路复用"></p><p>为了解决这一问题，就发展出了三层交换机，由三层交换机作为下行设备的网关，以缩小跨网段通信的“通勤”范围。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/db93425ec7a33881dfd94.png" alt="图13——三层交换"></p><p>vlanif就是三层交换机上的技术，在交换机上虚拟出拥有路由功能的三层接口，并自动绑定vlan。后期很多技术都是在该接口上配置（dns等）。</p><p>注意：</p><blockquote><p>单臂路由的子接口是虚拟在真实物理接口之下的，绑定在物理接口的。更换一个物理接口的话，就无法访问到。</p><p>而vlanif接口是在交换机的内部虚拟出来的三层接口，并不是绑定在某一物理接口，是绑定在vlan上的，匹配到vlan，就能访问到。</p><p>如果在多个物理接口上配置同一个vlan，那么随便接一个接口都可以访问到这个vlanif接口。</p></blockquote><p>配置方法:</p><ol><li>提前创建好vlan</li><li>执行命令<strong>interface Vlanif</strong> <em>vlan-id</em> ，创建vlanif接口，注意id号必须为已创建的vlan。</li><li>执行命令 <strong>ip address</strong> <em>IP地址 子网掩码</em> ， 为vlanif接口绑定ip地址，作为其vlan-id的网关。</li></ol><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/8dac6ce949d43ef80a79f.png" alt="图14——vlanif"></p><p>将单臂路由的拓扑中的路由器替换为三层交换机，拓扑中其他设备的配置不变。</p><p>只需要配置交换机3：</p><blockquote><p>vlan batch 10 30</p><p>interface GigabitEthernet0&#x2F;0&#x2F;1<br> port link-type trunk<br> port trunk allow-pass vlan 10 30</p><p>interface Vlanif10<br> ip address 10.0.0.254 255.0.0.0</p><p>interface Vlanif30<br> ip address 30.0.0.254 255.0.0.0</p></blockquote><p>三台交换机之间就又可以互相通信了。</p><h5 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h5><p>网络接口分二层接口与三层接口，<strong>路由器默认是三层接口，可以配置ip；交换机默认是二层接口，不可配置ip</strong>，只能配置vlan。</p><p>如果使用了vlanif接口作为下行设备的网关，那么就需要<strong>交换机的另一侧接口也拥有ip地址，才能做路由跳转</strong>。</p><p>这有两种方案：</p><ol><li>将交换机的接口通过命令配置修改为三层接口，然后配置ip（需要交换机支持切换）。</li><li><strong>新建一个vlan，配置在该物理接口上，然后再创建一个vlanif接口并配置ip地址</strong>。</li></ol><p>第一个方案不常用，因为第二个方案更优；可以给多个物理口配置同一个vlan，使其都使用同一个ip地址；而<strong>三层物理口无法做到多个接口使用同一个ip地址。</strong></p><p>多个物理口同ip的优势，一个是可以从每个接口独立分出，连接到傻瓜交换机或无线路由器&#x2F;AP作为接口拓展；另一个是后期链路故障时，可以很快速的通过更换接口来恢复网络。（现网中，可以提前规划配置好交换机的某两个接口为直连路由器的；这一链路故障后，直接在机房更换到空闲的另一个接口即可。）</p><p>关于三层交换机与路由器的搭配，由于还未学习路由技术，本文暂不详细介绍，之后会通过一个实验来融合讲解。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 交换 </tag>
            
            <tag> vlan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换路由基础命令（查阅版）</title>
      <link href="/2023/10/19/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/10/19/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="交换部分——Vlan、DHCP、STP"><a href="#交换部分——Vlan、DHCP、STP" class="headerlink" title="交换部分——Vlan、DHCP、STP"></a>交换部分——Vlan、DHCP、STP</h2><p>描述：</p><blockquote><p>每台电脑代表一个部门，其中pc1、pc2、pc3、pc4则依次为vlan10、vlan20、vlan30、vlan40。</p><p>两台接入交换机LSW2、LSW3分别连接vlan10vlan20，vlan30vlan40</p><p>上行汇聚交换机LSW1开启DHCP服务，DNS设置为3.0.0.1</p><p>二层交换机直接互连，因此需开启STP，并将三层交换机设置为根。</p></blockquote><p><img src="https://telegraph-image-713.pages.dev/file/3dfc86b922ade3a582cc5.png"></p><p>下面命令，第一次都全拼且有注释，后续全为缩写</p><p>二层交换LSW2配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">system-view  //进入系统视图</span><br><span class="line">sysname sw2 //修改交换机名字</span><br><span class="line"></span><br><span class="line">vlan batch 10 20 30 40 //批量增设vlan10 vlan20 vlan30 vlan40</span><br><span class="line"></span><br><span class="line">interface Ethernet0/0/1 //进入1接口的视图</span><br><span class="line">port link-type access //配置为access模式</span><br><span class="line">port default vlan 10 //配置接口的VLAN</span><br><span class="line"></span><br><span class="line">int e0/0/2</span><br><span class="line">p l a</span><br><span class="line">p d v 20</span><br><span class="line"></span><br><span class="line">interface Ethernet0/0/3</span><br><span class="line">port link-type trunk //配置为trunk模式</span><br><span class="line">port trunk allow-pass vlan 10 20 30 40 //配置接口放行的VLAN</span><br><span class="line"></span><br><span class="line">int e0/0/4</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 40</span><br></pre></td></tr></table></figure><p>二层交换LSW3配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys sw3</span><br><span class="line"></span><br><span class="line">vlan batch 10 20 30 40</span><br><span class="line">interface Ethernet0/0/3</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 30</span><br><span class="line">int e0/0/4</span><br><span class="line">p l a</span><br><span class="line">p d v 40</span><br><span class="line">interface Ethernet0/0/1</span><br><span class="line">port link-type trunk</span><br><span class="line">port trunk allow-pass vlan 10 20 30 40</span><br><span class="line">int e0/0/2</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 40</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>三层交换机LSW1配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys sw1</span><br><span class="line"></span><br><span class="line">dhcp enable // 开启DHCP功能</span><br><span class="line">vlan batch 10 20 30 40</span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line">port link-type trunk</span><br><span class="line">port trunk allow-pass vlan 10 20 30 40</span><br><span class="line">int g0/0/3</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 40</span><br><span class="line"></span><br><span class="line">interface Vlanif10 //虚拟一个vlan10接口（需已创建vlan10）</span><br><span class="line">ip address 192.168.10.254 255.255.255.0 //为该虚拟接口配置ip地址</span><br><span class="line">dhcp select interface //在该接口上开启DHCP</span><br><span class="line">dhcp server dns-list 3.0.0.1 //在该接口DHCP上设定DNS服务地址</span><br><span class="line">int vlanif20</span><br><span class="line">ip add 192.168.20.254 24</span><br><span class="line">dhcp sel int</span><br><span class="line">dhcp server dns 3.0.0.1</span><br><span class="line">int vlanif30</span><br><span class="line">ip add 192.168.30.254 24</span><br><span class="line">dhcp sel int</span><br><span class="line">dhcp server dns 3.0.0.1</span><br><span class="line">int vlanif40</span><br><span class="line">ip add 192.168.40.254 24</span><br><span class="line">dhcp sel int</span><br><span class="line">dhcp server dns 3.0.0.1</span><br><span class="line"></span><br><span class="line">stp root primary //设置该交换机为STP的根服务器（由于华为交换机默认开启STP，所以都没有输入开启命令）</span><br></pre></td></tr></table></figure><blockquote><p>注：下游电脑获取到DHCP授权的ip地址的前提是交换机开起了DHCP功能，并在接口上启用DHCP，同时设置了VlanIf的ip地址，并且链路是放行了vlan。</p></blockquote><table><thead><tr><th>基础命令</th><th>说明与用例</th></tr></thead><tbody><tr><td>vlan *</td><td>创建vlan</td></tr><tr><td>vlan batch * *</td><td>同时创建多个vlan</td></tr><tr><td></td><td>用例：vlan batch 20 40              ||           vlan bath 20 to 40 (配置vlan20到vlan40)</td></tr><tr><td></td><td></td></tr><tr><td>interface Ethernet</td><td>进入接口模式（百兆口）</td></tr><tr><td>port link-type access</td><td>接口类型配置为access</td></tr><tr><td>port default vlan *</td><td>为接口配置vlan</td></tr><tr><td></td><td>用例：port default vlan 10</td></tr><tr><td></td><td></td></tr><tr><td>interface GigabitEthernet</td><td>进入接口模式（千兆口）</td></tr><tr><td>port link-type trunk</td><td>接口类型配置为trunk</td></tr><tr><td>port trunk pvid vlan *</td><td>接口配置pvid ——打上的vlan标签</td></tr><tr><td>port trunk allow-pass vlan *</td><td>接口放行对应的vlan通过</td></tr><tr><td></td><td>用例：port trunk allow-pass vlan 10 20</td></tr><tr><td></td><td></td></tr><tr><td>interface Vlanif *</td><td>对已创建的vlan，创建一个vlanif接口，作为改vlan的网关</td></tr><tr><td></td><td>用例：int vlan 10</td></tr><tr><td>ip address *</td><td>为vlanif接口添加ip地址——其下vlan设备的网关地址</td></tr><tr><td></td><td>用例：ip address 192.168.1.254 24</td></tr></tbody></table><h2 id="路由部分——动态路由ospf、静态路由、NAT"><a href="#路由部分——动态路由ospf、静态路由、NAT" class="headerlink" title="路由部分——动态路由ospf、静态路由、NAT"></a>路由部分——动态路由ospf、静态路由、NAT</h2><p>在上文的拓扑基础上，增加一个出口路由器</p><p><img src="https://telegraph-image-713.pages.dev/file/35e07912014e9a52d29ad.png"></p><p>首先需要配置LSW1，增加到AR1的链路信息与配置ospf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vlan 12</span><br><span class="line">interface GigabitEthernet0/0/2</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 12</span><br><span class="line">interface Vlanif12</span><br><span class="line"> ip address 192.168.12.2 255.255.255.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 开启ospf，并设定router-id为2.2.2.2</span><br><span class="line">// 开启area0</span><br><span class="line">// 宣告设备所连接的网段信息</span><br><span class="line">ospf 1 router-id 2.2.2.2</span><br><span class="line"> area 0.0.0.0</span><br><span class="line">  network 192.168.12.2 0.0.0.0</span><br><span class="line">  network 192.168.10.254 0.0.0.0</span><br><span class="line">  network 192.168.20.254 0.0.0.0</span><br><span class="line">  network 192.168.30.254 0.0.0.0</span><br><span class="line">  network 192.168.40.254 0.0.0.0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置AR1路由器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys r1</span><br><span class="line">int s4/0/0</span><br><span class="line">ip add 192.168.12.1 24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ospf 1 router-id 1.1.1.1</span><br><span class="line"> area 0</span><br><span class="line">  network 192.168.12.1 0.0.0.0 </span><br><span class="line"></span><br><span class="line">//设置静态缺省路由，让未配置的网段路由统一走下一跳到12.0.0.2（假定该ip地址为AR1路由器所连接的公网路由器ip）</span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 12.0.0.2</span><br><span class="line">//将该静态缺省路由通过ospf宣告给ospf下的其他三层设备</span><br><span class="line">ospf 1</span><br><span class="line"> default-route-advertise</span><br></pre></td></tr></table></figure><p>假设在AR1路由器的右侧连接了运营商的公网路由器，其ip地址为12.0.0.2，运营商分配的公网ip为12.0.0.1</p><p>设置NAT出口策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//创建一条acl策略，规则为全放行</span><br><span class="line">acl 2000</span><br><span class="line">rule 1 permit</span><br><span class="line">进入连接了公网路由器的1口，配置nat出口策略（使用2000号的acl规则）</span><br><span class="line">int g0/0/1</span><br><span class="line">nat outbound 2000</span><br></pre></td></tr></table></figure><hr><p>再增设3个路由器与2台服务器，对应公网的情况。</p><p><img src="https://telegraph-image-713.pages.dev/file/33a1c959a0ffb75afe917.png"></p><p>AR2通过串口线与AR1连接，也就是12.0.0.2ip的公网路由器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys R2</span><br><span class="line">int s4/0/0</span><br><span class="line">  ip add 12.0.0.2 24</span><br><span class="line">int g0/0/0</span><br><span class="line">  ip add 23.0.0.2 24</span><br><span class="line">int g0/0/1</span><br><span class="line">  ip add 24.0.0.2 24</span><br><span class="line"></span><br><span class="line">ospf 1 router-id 2.2.2.2 </span><br><span class="line">area 0</span><br><span class="line">  network 12.0.0.2 0.0.0.0 </span><br><span class="line">  network 23.0.0.2 0.0.0.0 </span><br><span class="line">  network 24.0.0.2 0.0.0.0 </span><br></pre></td></tr></table></figure><p>AR3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys R3</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 23.0.0.3 24</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 34.0.0.3 24</span><br><span class="line">int g0/0/2</span><br><span class="line">ip add 3.0.0.254 24</span><br><span class="line"></span><br><span class="line">ospf 1 router-id 3.3.3.3</span><br><span class="line">a 0</span><br><span class="line">net 23.0.0.3 0.0.0.0</span><br><span class="line">net 34.0.0.3 0.0.0.0</span><br><span class="line">net 3.0.0.254 0.0.0.0</span><br></pre></td></tr></table></figure><p>AR4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys R4</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 24.0.0.4 24</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 34.0.0.4 24</span><br><span class="line">int g0/0/2</span><br><span class="line">ip add 4.0.0.254 24</span><br><span class="line"></span><br><span class="line">ospf 1 router-id 4.4.4.4</span><br><span class="line">a 0</span><br><span class="line">net 24.0.0.4 0.0.0.0</span><br><span class="line">net 34.0.0.3 0.0.0.0</span><br><span class="line">net 4.0.0.254 0.0.0.0</span><br></pre></td></tr></table></figure><p>为dns服务器配置3.0.0.1地址，http服务器配置4.0.0.1地址</p><p>则私网的pc都可以连通到公网的这两个服务</p><p><img src="https://telegraph-image-713.pages.dev/file/d66b35aea5af074f68b92.png"></p><p><strong>注意：配置记得保存，以及模拟器会定期休眠。时间太久可能某一台路由器宕机了导致链路不通。</strong></p><h2 id="点对点协议认证"><a href="#点对点协议认证" class="headerlink" title="点对点协议认证"></a>点对点协议认证</h2><p>以上图为例，在右侧的AR2配置认证模式与账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//配置认证模式为chap</span><br><span class="line">interface Serial4/0/0</span><br><span class="line"> ppp authentication-mode chap </span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">//创建用户，并将用户用于ppp协议</span><br><span class="line">aaa</span><br><span class="line"> local-user magiku password cipher magiku030</span><br><span class="line"> local-user magiku service-type ppp</span><br></pre></td></tr></table></figure><p>注：点对点协议是基于串口线连接的设备之间。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VRP命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【科普】计算机网络概述</title>
      <link href="/2023/10/19/%E3%80%90%E7%A7%91%E6%99%AE%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/"/>
      <url>/2023/10/19/%E3%80%90%E7%A7%91%E6%99%AE%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多计算机网络的教程或课程，一开始就讲一堆术语与原理；</p><p>学习半天都还不知道有什么用，学一星期了也不清楚跟自己日常接触的网络有啥关系。</p><p>本文则是以字数少、通俗易懂为前提来科普整个网络方面的知识；</p><p>为各位阅读几百页的教材书或者观看几十集的网络课程时有一个基础的概念与体系，方便深入学习。</p><p>如果要以实践为主体的，推荐之后去按hcia的课程进行学习。</p><p>如果想深层次理解原理的，可以去看看黑皮书与TCP&#x2F;IP相关的书籍。</p><p>请不要过分纠结本文中的某段话，本身出于以上原则写的，所以部分地方描述的并不严谨。</p><h1 id="从大家最熟悉的家庭网络开始介绍"><a href="#从大家最熟悉的家庭网络开始介绍" class="headerlink" title="从大家最熟悉的家庭网络开始介绍"></a>从大家最熟悉的家庭网络开始介绍</h1><p>一个家庭的网络从无到有，会经历这个过程</p><blockquote><p>找运营商购买宽带套餐</p><p>运营商派宽带师傅上门安装</p><p>宽带师傅从户外通信电箱拉光纤到房间</p><p>拿出光猫接上光纤，配置光猫</p><p>家庭有无线路由器的，再通过网线连上光猫</p><p>设置好无线路由器的配置后</p><p>手机连上WiFi就可以上网，电脑通过网线连接无线路由器也可以上网了。</p></blockquote><p>如果家中设备比较多，那么可以在无线路由器下再连接一个小型交换机</p><p>最终就是这样样子</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/9de074a8bc2776f472146.png" alt="图1——家庭网络架构"></p><p>简单用文字介绍，那就是 运营商提供的链路——光猫——路由器——交换机——网络设备</p><p>接下来就简单介绍这些设备在网络中起到什么作用</p><h4 id="光猫、或者说“猫”"><a href="#光猫、或者说“猫”" class="headerlink" title="光猫、或者说“猫”"></a>光猫、或者说“猫”</h4><p>这个设备的作用就是<strong>信号转换</strong>。比如将光纤中的光信号与网线中的电信号作互相转换。</p><p>这个设备英文名叫Modem，是 modulator（调制器）和 demodulator（解调器）的合成，也就是“调制解调器”。</p><p>早期大伙都音译叫做猫，于是”猫“这个叫法就这么一直流传下来了。</p><p>目前“猫”这个词所代指的设备很宽泛，不再单指调制解调器。</p><p><strong>现在运营商提供的光猫都带调制解调器功能与路由器功能</strong>，有的甚至加上了无线WiFi的功能。(也就是集成了无线路由器的功能)</p><h4 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h4><p>连接不同网络的“网关”，可以类比作不同国家之间的海关。</p><p>一般来说，<strong>一个网络中只配置一台路由器。</strong></p><p>路由器主要负责”路由“功能，也就是给网络数据的传播做一个导航指路的作用。</p><h4 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h4><p>一般交换机就是用来<strong>连接多台网络设备</strong>，使设备连接在一起。</p><p>同时可以理解为，交换机就是一个插排。</p><p>路由器&#x2F;其他交换机传过来的’电‘只剩一个’插座口‘，接上交换机这个‘插排’后，就可以给多台网络设备同时’供电‘了。</p><blockquote><p>以上都是以基础小白的概念以及家庭网络层面来介绍的，后续以公司网络架构为基础介绍数据包过程就会更为具体准确的讲解了</p><p>简单来说，数据包（要发送的信息）就是通过电脑主机形成、通过链路到达交换机、再用交换机转发到路由器、路由器再一路转发到目标电脑所在的局域网路由器、经过交换机到达目标电脑，由目标电脑解析数据包的内容。</p></blockquote><blockquote><p>在正式的网络中，就是一台路由器加数台交换机。</p><p>如果是规模比较大的网络，一般会考虑一个链路冗余、双机备份，避免某处线缆破损或者设备损坏导致大片设备无法上网。</p><p>这里贴一个网络拓扑图可以参考一下（与家庭网络相比最主要的区别就是将WIFI功能从路由器上剥离，使用专门的无线AP设备来实现）</p><p>强调一下，家用无线路由器是集成了WiFi、路由、交换三种功能的设备。在企业网络中，一般都是由专门的设备独立负责的（不使用家用无线路由器是出于性能考虑）</p></blockquote><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/1f6b213e66604a8bc5c32.png" alt="图2——企业网络架构"></p><h1 id="网络信息"><a href="#网络信息" class="headerlink" title="网络信息"></a>网络信息</h1><p>本章介绍网络通信时所需要的信息，平时会折腾一下电脑或手机网络可能都会看到这些</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/65bfc6defc73214dd2cca.png" alt="图3——计算机网络信息"></p><p>其中我们需要注意的 MAC地址（物理地址）、IP地址（一般指IPv4地址）、网关、DHCP、DNS。</p><blockquote><p>MAC地址是网卡的身份证——每个网络设备上至少有一块网卡，mac地址就是用来标识网卡的，严格来讲mac并不叫“地址”。</p><p>IP地址为门牌号——用来标识网络设备在网络中的具体位置</p><p>网关为小区门卫——管理一个网络的进出口链路，一般可以理解成网关就是路由器</p><p>DHCP是随机摇号机制——为网络设备分配ip地址</p><p>DNS是业主住址薄——用来查找一个网站域名对应的ip地址是多少</p></blockquote><p>图中网关、DHCP服务器、DNS服务器为同一个，是因为我用的电脑连接手机的热点。</p><p>DNS设置为网关，相当于使用网关的网络信息中的DNS服务器。（笔记本：我用什么DNS都依手机，跟他一样）</p><h4 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h4><p>端口这个说法不够具体，物理接口就叫做端口，比如交换机端口，墙面端口等等</p><p>这里要介绍的是抽象概念上的虚拟端口，在计算机中，其范围从0~65535，</p><p>你电脑上运行了很多联网的程序，他们都在使用网络资源，但他们都互不干扰。</p><p>具体一点就是你与很多qq好友同时在线聊天，你接收到A好友发来的消息并不会跑错到B好友的聊天窗口中。</p><p>这是因为在你的电脑上虚拟了很多个端口，应用进程使用其中一个端口与对方通信，就不会跟其他的冲突了。</p><p>打开系统的资源监视器就可以直观的看到了，注意看我只运行了一个qq（PID为12344），但它已经使用了很多个端口在与不同的远端电脑通信。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/1c0515d4c9db8294d58f8.png" alt="图4——计算机进程端口映射表"></p><h4 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h4><p>协议就是规则、规范，或者说一种语言。</p><p>因为计算机网络中传播的数据只有0和1，为此就需要协议来定义出各种编码解码方式（类似摩斯密码）</p><p>以及定义得到的各种参数代表什么含义。（类似缩写与黑话）</p><p>计算机通信中存在着许多的协议，这里按五层模型来展示的话，一共有这么多协议。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/c69fcfccbbc0493af63b9.png" alt="图5——分层网络协议"></p><p>目前只需要知道有协议这个概念就行，以后会具体一个个协议的学习</p><h4 id="网络参考模型"><a href="#网络参考模型" class="headerlink" title="网络参考模型"></a>网络参考模型</h4><p>七层模型是ISO组织于1984年发布的细化的网络层级，更多的作用是让你理解网络通信这个抽象的东西，同时让厂商基于这个层级去标准化规范化的设置与遵循协议。</p><p>故障排查时也可以按照七层模型来逐级排查。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">应用层:OSI参考模型中最靠近用户的一层,为应用程序提供网络服务。</span><br><span class="line"></span><br><span class="line">表示层:提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别。</span><br><span class="line"></span><br><span class="line">会话层:负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成。</span><br><span class="line"></span><br><span class="line">传输层:提供面向连接或非面向连接的数据传递以及进行重传前的差错检测。</span><br><span class="line"></span><br><span class="line">网络层:定义逻辑地址,供路由器确定路径,负责将数据从源网络传输到目的网络。</span><br><span class="line"></span><br><span class="line">数据链路层:将比特组合成字节,再将字节组合成帧,使用链路层地址(以太网使用MAC地址)来访问介质,并进行差错检测。</span><br><span class="line"></span><br><span class="line">物理层:在设备之间传输比特流,规定了电平、速度和电缆针脚等物理特性。</span><br></pre></td></tr></table></figure><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/34123c5a32b053223662b.png" alt="图6——分层传输过程"></p><p>而TCP&#x2F;IP四层&#x2F;五层模型可以说是对OSI七层模型的简化。将最上的5、6、7层简化为一层。</p><p>具体内容感兴趣可自行查阅资料，<strong>目前五层模型更被广泛接受。</strong></p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/b442b24545d26f20f99b6.png" alt="图7——两种分层协议对比"></p><p>目前只需要知道<strong>二层是基于mac地址进行数据传输，三层是基于ip地址传输。</strong></p><p>因此在电脑之间的网络传播都是处于前3层上的。</p><p>路由器都是三层设备，而交换机会有二层交换机与三层交换机之分，一般个人接触到交换机都是二层交换机。</p><blockquote><p>介绍以上信息都是为了接下来介绍的数据包的传输做基础。</p></blockquote><h4 id="数据包"><a href="#数据包" class="headerlink" title="数据包"></a>数据包</h4><p>我们都知道计算机的底层是由0和1构成的，我们看到的图片、音频、视频在计算机底层都是一串串数字。</p><p>网络通信时传输的就是这些字符串。</p><p>在实际传输时，会把这些字符串拆解打包，封装，成为一个个数据包，有些地方会叫做报文（严格来讲，有包、段、帧的区分，但日常都统称为包）</p><p>一个数据包的结构可以简化为</p><p><strong>【目标地址】【源地址】【协议类型】【数据内容】【校验码】</strong></p><blockquote><p>具体可以百度搜索一下各数据报文结构。此处不是很严谨，不同分层下的数据包结构是不一样的，这里只是一个形象的简化概括。</p></blockquote><p>类比一下</p><table><thead><tr><th></th><th>含义</th><th>类比</th></tr></thead><tbody><tr><td><strong>目标地址</strong></td><td>数据包要送达的目的地</td><td>快递的收件人</td></tr><tr><td><strong>源地址</strong></td><td>数据包的发送来源</td><td>快递的寄件人</td></tr><tr><td><strong>协议类型</strong></td><td>该数据包遵循什么协议、使用什么协议解读</td><td>走哪一家物流公司的渠道</td></tr><tr><td><strong>数据内容</strong></td><td>真正要传输的数据</td><td>快递包裹内的东西</td></tr><tr><td><strong>检验码</strong></td><td>通过固定的算法计算出的数据包相关内容的值<br />如果设备收到该数据包后计算的出的值与该检验码不同<br />则说明该数据包损坏了，于是会丢弃该数据包<br />（也就是常说的“丢包”）</td><td>快递的包装、如果包装破损、物品缺失、会拒收</td></tr></tbody></table><h1 id="数据包的传输过程"><a href="#数据包的传输过程" class="headerlink" title="数据包的传输过程"></a>数据包的传输过程</h1><h2 id="交换阶段"><a href="#交换阶段" class="headerlink" title="交换阶段"></a>交换阶段</h2><p>不知道各位在学校上电脑课时，在老师还没开通“上网”功能前，有没有偷偷跟同学联机打几把cs。</p><p>多台电脑在没连通互联网时是如何联机打游戏的呢？ 应该有人会说出一个词——“局域网”。</p><p>局域网就是一个小型网络，在学校机房这个地方，其局域网可以简化为这样。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/5b2b3d360339a99117c90.png" alt="图8——拓扑"></p><blockquote><p>交换机SW2开启DHCP功能，1号口连接SW1的4号口。MAC地址为：4c-1f-cc-25-2c-49</p><p>交换机SW1的1、2、3号口分别连接PC1、PC2、PC3。MAC地址为：54-89-98-b6-57-ab</p><p>PC1自动获取到的ip地址为192.168.10.251，MAC地址为：54-89-98-B6-57-AB</p><p>PC2自动获取到的ip地址为192.168.10.252，MAC地址为：54-89-98-32-67-F6</p><p>PC3自动获取到的ip地址为192.168.10.253，MAC地址为：54-89-98-A8-22-35</p></blockquote><h3 id="交换机的mac地址映射表"><a href="#交换机的mac地址映射表" class="headerlink" title="交换机的mac地址映射表"></a>交换机的mac地址映射表</h3><p>假设主机之间都知道彼此的mac地址，那么通讯就是基于二层，由二层交换机处理即可。</p><p>交换收到一个标注了mac地址的数据包，他要如何发送给对应的电脑呢？</p><p>这就要介绍交换机的两大特性：学习、泛洪（广播）</p><p>举例PC1指定发送给PC2，同时目前交换机是刚连入该网络中</p><blockquote><p>学习：交换机从1号接口收到一个数据包——数据包是会注明源地址与目标地址（发件人与收件人）</p><p><strong>交换机查看到数据包的源地址，就会记录下这个源地址就是来自这个端口</strong>（PC1来自1号口）</p></blockquote><blockquote><p>泛洪：<strong>交换机发现未曾记录过目的地址</strong>（PC2的mac），<strong>交换机就会进行广播</strong>，将该数据包同时从2、3、4口发送出去，当PC2收到并回复时，交换机便会学习记录下来（PC2在2口）</p><p>注：其余pc虽然收到了PC1发给PC2的数据包，但他们看到数据包开头的目标地址不是自己的mac地址，于是不会理会回应这个数据包</p></blockquote><p>以下是在模拟器中查询交换机SW1的mac地址对应表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW1&gt;dis mac-address</span><br><span class="line">MAC address table of slot 0:</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">MAC Address    VLAN/       PEVLAN CEVLAN Port            Type      LSP/LSR-ID  </span><br><span class="line">               VSI/SI                                              MAC-Tunnel  </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">5489-98b6-57ab 10          -      -      Eth0/0/1        dynamic   0/-         </span><br><span class="line">5489-9832-67f6 10          -      -      Eth0/0/2        dynamic   0/-         </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Total matching items on slot 0 displayed = 2</span><br></pre></td></tr></table></figure><p>基于学习与广播两种方式，一个普通的交换机就能完成一个简单的局域网通讯。</p><h3 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h3><p>上面是在主机已知对方mac地址的情况下实现的（主机发送数据包时，填写了收件人）</p><p>目前我们记录与使用的都是ip地址，很少会去专门记mac地址。</p><blockquote><p>插播一条知识：即便是一个网站名，比如<a href="http://www.baidu.com,它其实也是一个ip地址,dns就是负责将网站名翻译为ip地址/">www.baidu.com，它其实也是一个ip地址，DNS就是负责将网站名翻译为ip地址</a></p></blockquote><p>那么在知道ip地址，不知道mac地址时，又是如何完成通信的呢。</p><p>首先，<strong>电脑会判断要访问的目标ip与自身是不是处于同一个子网</strong>（有关子网，稍后会介绍）</p><p><strong>若不同子网，电脑会将数据包的目标mac填写为网关的mac地址，使该数据包发送给网关，由网关去寻找目标ip</strong></p><p><strong>若同一子网，电脑会将额外发送一个ARP数据包</strong>，该数据包的目标mac填写为ffffffffffff，也就是广播。<strong>通过ARP获取了目标主机的mac地址后，才开始发送数据包。</strong></p><p>这里我抓了个包，是在PC1与PC2都没有对方mac信息是，由PC1去访问PC2的ip地址。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/81fe6f52ea7bc0c80b266.png" alt="图9——抓包信息"></p><p>其中，第二行这段就是二层的信息，其注明了源地址为54:89:98:b6:57:ab 目标地址为ff:ff:ff:ff:ff:ff。以及该数据包的类型为ARP</p><p>交换机只识别到二层信息，发现目标地址是广播地址（全F），于是转发给所有主机。</p><blockquote><p>Ethernet II, Src: HuaweiTe_b6:57:ab (54:89:98:b6:57:ab), Dst: Broadcast (ff:ff:ff:ff:ff:ff)</p><p>Type: ARP (0x0806)</p></blockquote><p>下面这段摘抄一下，也是记录了源mac与IP地址，以及目标ma与IPc地址</p><blockquote><p>Address Resolution Protocol (request)<br>    Sender MAC address: HuaweiTe_b6:57:ab (54:89:98:b6:57:ab)<br>    Sender IP address: 192.168.10.251<br>    Target MAC address: Broadcast (ff:ff:ff:ff:ff:ff)   注意实际中此处为00:00:00:00:00，模拟器bug才显示的全f<br>    Target IP address: 192.168.10.252</p></blockquote><p>PC2收到这个数据包后，解析内容知道这是一个ARP数据包，并且数据内容中含有自己的IP地址（192.168.10.252）。</p><p>于是遵循协议，它会回复一个数据包。</p><p>该数据包，自然就写上了PC2自身的mac地址，PC1收到这个数据包，也就清楚了192.168.10.252对应54:89:98:32:67:f6</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/9334b3568d41a1e9627a2.png" alt="图10——抓包2"></p><p>我们也可以验证一下，在PC1的命令行中查看ARP表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;arp -a</span><br><span class="line"></span><br><span class="line">Internet Address    Physical Address    Type</span><br><span class="line">192.168.10.252      54-89-98-32-67-F6   dynamic</span><br></pre></td></tr></table></figure><p>等拿到了mac地址，PC1与PC2的通信就简单了。</p><h2 id="路由阶段"><a href="#路由阶段" class="headerlink" title="路由阶段"></a>路由阶段</h2><p>前面我们介绍了交换过程，会发现<strong>交换过程有一个小问题，那就是广播包太多</strong>：交换机泛洪，ARP泛洪。</p><blockquote><p><strong>提一下，交换机的泛洪是由它自身发起的，是交换机本身不知道数据包中的目的mac地址在哪</strong></p><p><strong>ARP泛洪是要进行通讯的网络设备引起的，是为了要填写目的mac地址，需要知道目的设备的mac地址是多少。</strong></p></blockquote><p>网络中设备越多，这些<strong>广播包数量就越多，这样就会占用太多网络资源，导致“网络变卡”</strong></p><p>为此需要限制一下广播域，这就需要两项技术：<strong>路由与子网</strong></p><p>先简单说明路由的作用，路由作用在不同的网络之间，提供类似交换机一样的服务，但路由有一个最重要的作用，<strong>隔绝广播域</strong>。</p><p>网络内部，或者说局域网内部的广播数据包到达路由设备，路由设备不会将其扩散到其他局域网。</p><p>还记得我们看网络信息有ip地址、子网掩码与网关吗，包括我们手动修改ip地址时，也会让你填写。</p><p>网关就是路由设备的ip地址：<strong>如果要与其他网段通信的话，每个网段必定需要一个网关</strong></p><p>（不与其他网段的设备通讯的话，可不填写网关）</p><p>什么叫网段呢，网络号不相同的ip地址就是处于不同的网段，网段就是ip地址与子网掩码进行与运算后得到的网络地址。</p><p>因此我们先介绍子网的概念</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/7fe940190b93f6df4f8e2.png" alt="图11——计算机ip信息"></p><h3 id="子网"><a href="#子网" class="headerlink" title="子网"></a>子网</h3><p>我们可以看到ip地址、子网掩码每行都是由四段组成的，实际是4个字节，也就是4个8位二进制。例如</p><p>00000000  00000000  00000000  00000000 表示的是0.0.0.0</p><p>11111111  11111111  11111111  11111111 表示的是255.255.255.255</p><p>二进制的计算方法就不介绍了，百度一下就有。（现在记住，一个8位的二进制全为1时，就是255）</p><p><strong>IP地址，是由网络号加主机号构成的</strong>，也就是小区地址与门牌号。</p><p><strong>子网掩码，是用来标识到哪一段都是网络号</strong>。规则为将标识网络号的部位写为1，主机号的部分写为0。</p><p>例如我们常见的</p><blockquote><p>ip地址：192.168.1.2</p><p>子网掩码：255.255.255.0</p></blockquote><p>255明显就是整个字节8位二进制都为1，所以其意思就是192.168.1 这一段为网络号，后面的.2为主机号。</p><p>其网段就是192.168.1.0</p><p>早期，子网分为三大类</p><table><thead><tr><th>类别</th><th>子网掩码</th></tr></thead><tbody><tr><td>A类</td><td>255.0.0.0</td></tr><tr><td>B类</td><td>255.255.0.0</td></tr><tr><td>C类</td><td>255.255.255.0</td></tr></tbody></table><p>这很方便我们理解，因为它们是以一整个来划分的。</p><h4 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h4><p>但在实际中，C类包括的主机号也达到了253个（255-1-1，一个二进制全0表示网段，一个二进制全1表示广播地址）</p><p>出于节省ip地址与<strong>进一步隔绝广播域</strong>的目的，后来人们将子网进一步划分。</p><p>比如规划给我这层楼的ip网段是192.168.1.0，255.255.255.0</p><table><thead><tr><th>点分十进制</th><th>二进制</th></tr></thead><tbody><tr><td>IP地址：192.168.1.0</td><td>11000000  10101000  00000001  00000000</td></tr><tr><td>子网掩码：255.255.255.0</td><td>11111111  11111111  11111111  00000000</td></tr></tbody></table><p>但我这层楼有4个办公区，二进制嘛。那4就是2位二进制，往右借2位。</p><p>那子网掩码就为11111111  11111111  11111111  11000000 也就是255.255.255.192</p><p>那可分配的网段就是</p><table><thead><tr><th>二进制</th><th>点分十进制</th><th>主机可分配的ip地址范围</th></tr></thead><tbody><tr><td>11000000  10101000  00000001  00000000</td><td>192.168.1.0</td><td>192.168.1.1~192.168.1.62</td></tr><tr><td>11000000  10101000  00000001  01000000</td><td>192.168.1.64</td><td>192.168.1.65~192.168.1.126</td></tr><tr><td>11000000  10101000  00000001  10000000</td><td>192.168.1.128</td><td>192.168.1.129~192.168.1.190</td></tr><tr><td>11000000  10101000  00000001  11000000</td><td>192.168.1.192</td><td>192.168.1.193~192.168.1.254</td></tr></tbody></table><blockquote><p>注意，虽然划分了不同网段，但对于外部网络来说，这四个子网区域依旧还是192.168.1.0，255.255.255.0这一个网段。</p></blockquote><h4 id="子网掩码的简写"><a href="#子网掩码的简写" class="headerlink" title="子网掩码的简写"></a>子网掩码的简写</h4><p>子网掩码的书写总是要敲4段，而且有时不是很快理解。</p><p>所以我们会把子网掩码进行缩写，以二进制写法中，有多少也全1，也就是说网络号有多少位来简写</p><blockquote><p>192.168.1.2    255.255.255.0     可以简写为192.168.1.2    &#x2F;24</p><p>192.168.1.64  255.255.255.192 可以简写为192.168.1.64 &#x2F;26</p></blockquote><p>(当然，实际历史发展不是这样的，还是得强调本文旨在通俗易懂的理解计算机网络的基础概念，具体的学习更推荐另外看正统书籍)</p><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p>上面已经理解了网段的概念，接下来理解路由就很轻松了</p><p>路由就是指示去往其他网段的道路，是导航。</p><p>过程：</p><blockquote><p>当我们电脑要发送数据时，电脑会识别目标ip地址是不是同网段：</p><p>同网段，则不需要路由参与，按照交换过程传输数据包（无mac先ARP，拿到mac了直接通过mac发送数据包）</p><p>不同网段，则会在数据包的目标mac地址位置填写网关的mac地址（一样的，如果不知道网关的mac地址，就ARP寻找）</p></blockquote><blockquote><p>网关收到给自己的数据包，发现虽然mac’地址是自己，但ip地址不是自己的，网关就会根据路由信息去转发这个数据包。</p></blockquote><p> 所以把路由设备叫做网关很好理解，跟海关差不多。</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/bc8ded095962c0e282284.png" alt="图12——物流过程"></p><blockquote><p>1、电脑发送数据包</p><p>2、链路传输</p><p>3、交换机转发</p><p>4、路由设备寻址转发</p><p>5、路由设备之间的传输</p><p>6、目标网段的路由设备</p><p>7、8、目标网段内的交换</p><p>9、到达目标设备</p></blockquote><h4 id="路由原理"><a href="#路由原理" class="headerlink" title="路由原理"></a>路由原理</h4><p>路由设备与交换机可以说原理大同小异。</p><p>路由设备内部也是维护这一个数据表格，叫做路由表。</p><p>我在模拟器上搭了个简单的网络拓扑</p><p><img src="https://c4893f9d.telegraph-image-713.pages.dev/file/97888e3a3d7e245c3dc40.png" alt="图13——拓扑2"></p><blockquote><p>图片内容描述:</p><p>三台专业路由器AR1、AR2、AR3连接在一起，它们底下各自连着一台PC</p><p>注：<strong>专业级路由器。IP地址是配置在接口上的</strong>，所以一台设备拥有多个IP地址</p><p>RI与PC处于10.0.0.0 &#x2F;24网段，R1与R2处于12.0.0.0 &#x2F;24网段</p><p>R2与PC处于20.0.0.0 &#x2F;24网段，R2与R3处于23.0.0.0 &#x2F;24网段</p><p>R3与PC处于30.0.0.0 &#x2F;24网段。</p></blockquote><p>为设备配置好网段与IP地址后，我们来查看R1的路由表（我将本地回环与广播地址相关的删除了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis ip routing-table</span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line"></span><br><span class="line">Destination/Mask    ProtoPreCostFlags NextHop         Interface</span><br><span class="line"></span><br><span class="line">10.0.0.0/24Direct00D   10.0.0.254      GigabitEthernet0/0/0</span><br><span class="line">12.0.0.0/24Direct00D   12.0.0.1        GigabitEthernet0/0/1</span><br></pre></td></tr></table></figure><p>我们需要注意的就是目标网段与下一跳(NextHop)</p><p>上述R1路由表的意思就是，前往10.0.0.0&#x2F;24网段，从10.0.0.254这个ip所在位置出发；前往12.0.0.0&#x2F;24网段，从12.0.0.1这个ip所在位置出发。</p><p>那么我们是不是可以从PC1通讯到路由器R2了呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 12.0.0.2</span><br><span class="line"></span><br><span class="line">Ping 12.0.0.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br></pre></td></tr></table></figure><p>很遗憾，还不行，让我们来排查一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 12.0.0.1</span><br><span class="line"></span><br><span class="line">Ping 12.0.0.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 12.0.0.1: bytes=32 seq=1 ttl=255 time=16 ms</span><br></pre></td></tr></table></figure><p>PC1到R1是通的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;ping 12.0.0.2</span><br><span class="line">  PING 12.0.0.2: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 12.0.0.2: bytes=56 Sequence=1 ttl=255 time=10 ms</span><br></pre></td></tr></table></figure><p>R1到R2竟然也是通的？！而R1并没有故障。</p><hr><p>好，不卖关子，这是因为<strong>通信是双向的</strong>，虽然PC1可以联系到R2，但是目前R2联系不到PC1，所以他们就不互通，ping就会失败</p><p>这是R2的路由表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;dis ip routing-table</span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public   </span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">       12.0.0.0/24  Direct  0    0           D   12.0.0.2        GigabitEthernet0/0/1</span><br><span class="line">       20.0.0.0/24  Direct  0    0           D   20.0.0.254      GigabitEthernet0/0/0</span><br><span class="line">       23.0.0.0/24  Direct  0    0           D   23.0.0.2        GigabitEthernet0/0/2</span><br></pre></td></tr></table></figure><p>其中并没有前往10.0.0.0&#x2F;24的路由信息，手动添加一条静态路由信息进去。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[R2]dis ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">       10.0.0.0/24  Static  60   0          RD   12.0.0.1        GigabitEthernet0/0/1</span><br><span class="line">       12.0.0.0/24  Direct  0    0           D   12.0.0.2        GigabitEthernet0/0/1</span><br><span class="line">       20.0.0.0/24  Direct  0    0           D   20.0.0.254      GigabitEthernet0/0/0</span><br><span class="line">       23.0.0.0/24  Direct  0    0           D   23.0.0.2        GigabitEthernet0/0/2</span><br></pre></td></tr></table></figure><p>这时，PC1再去pingR2就通了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 12.0.0.2</span><br><span class="line"></span><br><span class="line">Ping 12.0.0.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 12.0.0.2: bytes=32 seq=1 ttl=254 time=16 ms</span><br></pre></td></tr></table></figure><hr><p>延申一下，既然PC1能ping通R2了。那么能ping通PC2吗？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 20.0.0.2</span><br><span class="line"></span><br><span class="line">Ping 20.0.0.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br><span class="line">Request timeout!</span><br></pre></td></tr></table></figure><p>是的不行，这是因为R1中没有前往20.0.0.0&#x2F;24网段的路由信息。</p><p>只要在R1配上对应的静态路由，PC1就能与PC2通信了。</p><p>包括后续与R3、PC3，因为都不是同一个网段，需要有对应的路由信息才能通信。</p><hr><h4 id="隔绝广播域的原理"><a href="#隔绝广播域的原理" class="headerlink" title="隔绝广播域的原理"></a>隔绝广播域的原理</h4><p>至于说路由设备为什么能隔离广播域</p><p>是因为在路由表中指定了广播地址（二进制全1，也就是255），的下一跳是127.0.0.1，也就是路由器本身，所以广播包不会转发出去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实理解了交换与路由的过程，就已经知道了计算机网络的全部通信过程。</p><p>其他的技术与知识都是在交换路由的基础上进行功能的丰富</p><p>到这里，我建议再回头从文章开始的位置再通读一遍，能更深刻的理解计算机网络中数据的传播过程。</p><h1 id="知识拓展"><a href="#知识拓展" class="headerlink" title="知识拓展"></a>知识拓展</h1><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>DNS（Domain Name System，域名系统），其作用是解析域名，将域名转换成ip地址。</p><p>早期，互联网都是直接使用ip地址通信，但对于人类来说，记忆ip地址还是太困难了。</p><p>于是出现了域名，访问百度，我们使用只需要记baidu.com，这非常方便好记。</p><p>而DNS就是对应的用来翻译域名的工具。</p><p>DNS服务器上有一个庞大的数据库，里面就记录域名对应了什么IP地址。</p><p>电脑访问一个域名时，会先访问DNS服务器，获取域名的IP地址，之后再根据IP地址去通信。</p><p>一些人可以听说过，“换一个DNS，网络就会好一些”</p><p>这有两个原因，一个是你与DNS服务器之间的访问速度；另一个则是DNS服务器翻译给你的ip地址不是最佳地址</p><p>多数情况都是第一个原因。</p><p>至于第二个原因，是因为大型网站，其搭配的运营商不止几个，服务器不止一台，甚至机房不止一处。</p><p>也就是说会有多个ip地址，虽然网站内容都是一样的，但是访问它们的速度自然会有差异。</p><p>另外，如果需要电脑正常能够上网，但某个网站或者联网程序就是有网络问题，这就有可能是你使用的DNS服务器有问题——其数据库中没有解析出正确可用的ip地址。（只是说有可能，不是一定）</p><h4 id="hosts文件"><a href="#hosts文件" class="headerlink" title="hosts文件"></a>hosts文件</h4><p>如果是Windows与Linux系统，电脑本地会有一个hosts文件，其中也储存着域名与ip地址的映射信息（其实是先有hosts文件，后出现DNS技术的）</p><p>电脑访问一个域名时，会先查询hosts文件，有信息直接访问该IP；没有的再去请求DNS。</p><p>请求DNS解析域名得到ip后，就会储存该数据在hosts文件中。</p><p>根据这个原理，我们可以玩个骚操作</p><p>在hosts文件中，添加一个常见的广告与流氓域名，将ip地址填写为127.0.0.1</p><p>这样电脑访问这些域名，就直接请求到本地地址去了，相当于自定义了黑名单。</p><h3 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h3><p>Network Address Translation，网络地址转换。</p><p>其诞生是因为IPv4地址即将分配完毕，由于成本问题与政治问题，众多国家不愿意迁移至IPv6。</p><p>美国于1994年开发推出了NAT技术，用于解决IPv4不够使用的问题。</p><p>其原理非常简单，就是将原来的局域网划为私网，不与互联网直接互通，而是在路由器上使用NAT技术，将私网的ip地址转化为一个公网ip地址。</p><p>使得原本需要几十个、几百个公网ip地址的区域，只需要配备一个公网ip地址就可以了。（你可以理解为变相的对一个公网地址进行子网划分）</p><p>目前使用的NAT技术，具体来说是NAT-PT（ Protocol Translator），是利用端口来进行地址转换。</p><p>在路由器内部有一张端口映射表，记录了路由器的什么虚拟端口对应什么私网内的ip地址（对应哪一台主机）。</p><p>路由器向公网通信就通过分配给自己的公网ip地址加上端口号。</p><p>NAT这个技术好处除开解决了IPv4不够用的问题之外，就是隔绝了公网与私网。</p><p>我们无法直接访问私网内的某一台设备，需要由对方先通信才行。（因为该设备未在路由器内建立映射，或者建立了，但你并不知道其对应哪一个端口）</p><p>这变相的保证了私网的安全：私网内的网络设备，不会被直接定向攻击。</p><p>但这个好处同时也是一个坏处。</p><p>私网内的网络设备不直接连通在公网上。很明显我们不能直接将随便一台网络设备作为服务器，其他人或者是你在其他地方无法直接访问到这台设备。</p><p>如果你家里的电脑有公网IP，那你在公司可以直接远程访问，可以作为你的云电脑，甚至你可以使用手机来远程，使手机拥有电脑的性能。</p><p><del>如果你的手机有公网IP，那你可以在家里，就远程放在公司的手机，直接打卡！</del></p><p><del>当然，现在有很多方案可以实现，比如：内网穿透。</del></p><h3 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h3><p>IPv6虽然使用上与IPv4一样，但<strong>IPv6不是IPv4的升级，而是一个全新的协议，与IPv4不兼容</strong>。</p><p>早期人们发现计算机发展拓展速度很快，甚至出现了移动智能设备（手机），IPv4可预见的不够使用，于是提出了IPv6。</p><p>IPv6的二进制位数是IPv4的4倍（32*4&#x3D;128），虽然第一眼看只是4倍，但这是二进制位数</p><p>换算一下总数量为2<sup>128</sup>&#x3D;340282366920938463463374607431768211456。而IPv4是4294967296。</p><p>IPv6因为与IPv4不兼容，所以想替换为IPv6，需要客户端、服务在程序上替换为IPv6，还需要路由设备也同时替换为IPv6。</p><p>因此出于成本问题这项技术很难推广开来，而且后续出现的NAT技术，解决了地址分配问题，这使得许多国家与机构放弃了IPv6。</p><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>防火墙的作用是自定义隔绝网络请求，阻断特定的网络通讯。</p><p>防火墙分软件防火墙与硬件防火墙。</p><p>软件</p><blockquote><p>我们的个人电脑就有防火墙（Windows防火墙或者你安装的杀毒软件携带的防火墙）</p><p>路由设备上也有防火墙</p></blockquote><p>硬件</p><blockquote><p>专门的防火墙设备，常与路由器串联在一起</p></blockquote><p>一般只有大企业才使用硬件的防火墙设备。</p><p>举几个防火墙的实际作用</p><p>限制办公设备访问常见的娱乐域名（不知道各位公司有没有设置过，会让你登不了游戏跟游戏平台）</p><p>限制个别办公设备访问公司服务器</p><p>限制互联网设备访问内网设备的特定端口（例如3389，这是Windows远程桌面的默认端口）</p><hr><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>有关IPv4、IPv6、NAT、DNS的技术背景与政治背景，我推荐看看这个视频 <a href="https://www.bilibili.com/video/BV1i14y157YV">电子监听、全国断网，棱镜门背后，中国如何从末路狂奔到世界之巅</a></p><p>这个视频做的非常好，我考虑之后摘抄记录一下。</p><p>看过以上知识后，相信你对计算机网络已经有了个大概了理解。</p><p>如果对计算机网络感兴趣，推荐去学习一下HCIA的知识，一套课程大概一个月就可以学习完毕。</p><p>之后还有兴趣再学习HCIP知识，到这我个人认为就足够了，已经覆盖了目前大多数的实际网络情况。</p><p>另外这个阶段去看看经典教材书籍也不错，尤其是TCP&#x2F;IP相关的书籍。</p><p>本文说是讲究”实际“”实践“，但其实还是以理论为主。</p><p>下一篇！下一篇就真正的以”实践“为主。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 科普 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
